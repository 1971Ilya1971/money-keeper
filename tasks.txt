1. В файле скрипта создать 2 переменные (money и time), которые будут получать данные от пользователя:
	·Первая будет спрашивать "Ваш бюджет на месяц?"
	·Вторая "Введите дату в формате YYYY-MM-DD"

2. Создать объект appData, который будет содержать такие данные:
	·бюджет (из п.1)
	·данные времени - timeData (из п.1)
	·объект с обязательными расходами - expenses (из п.4)
	·объект с необязательными расходами - optionalExpenses (оставляем пока пустым)
	·массив данных с доп. доходом - income (оставляем пока пустым)
	·свойство savings (выставляем его как false)

3. Задать пользователю по 2 раза вопросы:
	“Введите обязательную статью расходов в этом месяце”
	“Во сколько обойдется?”

4. Записать ответы в объект expenses в формате: 
	expenses: {
		“ответ на первый вопрос” : “ответ на второй вопрос”
	}

5. Вывести на экран пользователя бюджет на 1 день (брать месяц за 30 дней)

6. Оформить расчет дневного бюджета  и вывод на экран этого значения как одну функцию (detectDayBudget)

7. Оформить блок кода с расчетом уровня достатка как отдельную функцию (detectLevel)

8. Создать функцию для определения необязательных расходов (chooseOptExpenses):

9. Необходимо 3 раза спросить у пользователя “Статья необязательных расходов?”
	Записать ответы в объект optionalExpenses в формате Номер - Ответ.
	optionalExpenses: {
		1 : “ответ на вопрос”
	}

10. Написать проверку, что пользователь может:
	·Ввести в дополнительных доходах (chooseIncome) только строку
	·Не может оставить строку пустой

11. Получение всех необходимых элементов верстки:
	·Получить кнопку "Начать расчет" через id
	·Получить все блоки в правой части программы через классы (которые имеют класс название-value, начиная с <div class="budget-value"></div> и заканчивая <div class="yearsavings-value"></div>)
	·Получить поля(input) c обязательными расходами через класс. (class=”expenses-item”)
	·Получить кнопки “Утвердить” и “Рассчитать” через Tag, каждую в своей переменной. 
	·Получить поля для ввода необязательных расходов (optionalexpenses-item) при помощи querySelectorAll
	·Получить оставшиеся поля через querySelector (статьи возможного дохода, чекбокс, сумма, процент, год, месяц, день)

12. Если программа еще не запущена( не нажали кнопку "Начать расчет") - сделать кнопки неактивными.

13. Реализовать функционал: при расчете дневного бюджета учитывать сумму обязательных трат (т. e. от бюджета на месяц отнимаем общую сумму всех обяз. трат и ее делим на 30 дней)